# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: GTMProjects deployer

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # 1. ADD THIS STEP: Change to your Next.js app directory
      - name: Change to Next.js app directory
        run: cd NextJS

      - name: Detect package manager
        id: detect-package-manager
        # 2. UPDATE PATHS: These paths are now relative to the 'NextJS/' directory
        run: |
          if [ -f "yarn.lock" ]; then # No need for ${{ github.workspace }}/
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "package.json" ]; then # No need for ${{ github.workspace }}/
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          # 3. UPDATE CACHE DEPENDENCY PATH:
          cache-dependency-path: NextJS/package-lock.json # Or NextJS/yarn.lock if using yarn
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
          # 4. ADD THIS PARAMETER: Tell the action where your Next.js app is located
          directory: NextJS
      - name: Restore cache
        uses: actions/cache@v4
        with:
          # 5. UPDATE CACHE PATHS:
          path: |
            NextJS/.next/cache # This path is now relative to the root of the repo
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('NextJS/package-lock.json', 'NextJS/yarn.lock') }}-${{ hashFiles('NextJS/**.[jt]s', 'NextJS/**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('NextJS/package-lock.json', 'NextJS/yarn.lock') }}-
      - name: Install dependencies
        # This will run inside the NextJS directory because of the 'cd' command
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        # This will run inside the NextJS directory because of the 'cd' command
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 6. UPDATE ARTIFACT PATH: The 'out' directory will be created inside 'NextJS/'
          path: ./NextJS/out # Specify the correct path to the 'out' folder relative to the repo root

  # Deployment job (no changes needed here as it operates on the uploaded artifact)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
