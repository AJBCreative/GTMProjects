# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Removed the 'cd NextJS' step here.
      # Instead, we'll use 'working-directory' for relevant steps.

      - name: Detect package manager
        id: detect-package-manager
        # Specify the working directory for this script
        # This tells the script to look for yarn.lock/package.json inside NextJS/
        working-directory: NextJS
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          # Path for caching dependencies should be relative to the repo root
          cache-dependency-path: NextJS/package-lock.json # Or NextJS/yarn.lock if using yarn
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next
          # This is correct: Tells 'configure-pages' where the Next.js project is
          directory: NextJS
      - name: Restore cache
        uses: actions/cache@v4
        with:
          # Paths should be relative to the repo root
          path: |
            NextJS/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('NextJS/package-lock.json', 'NextJS/yarn.lock') }}-${{ hashFiles('NextJS/**.[jt]s', 'NextJS/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('NextJS/package-lock.json', 'NextJS/yarn.lock') }}-
      - name: Install dependencies
        # This command runs *inside* the NextJS directory due to 'working-directory'
        working-directory: NextJS
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        # This command runs *inside* the NextJS directory due to 'working-directory'
        working-directory: NextJS
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # The 'out' directory is inside NextJS/, so specify the full path from repo root
          path: ./NextJS/out

  # Deployment job (no changes needed here as it operates on the uploaded artifact)
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
